// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package dynamicchangeobject.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import dynamicchangeobject.helpers.ValidateMemberValue;
import dynamicchangeobject.repositories.MendixObjectRepository;
import dynamicchangeobject.usecases.SetMemberValue;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class DynamicChangeObject extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject InputObject;
	private java.lang.String Member;
	private java.lang.String NewValue;
	private dynamicchangeobject.proxies.ENU_Commit Commit;
	private java.lang.Boolean RefreshInClient;

	public DynamicChangeObject(IContext context, IMendixObject InputObject, java.lang.String Member, java.lang.String NewValue, java.lang.String Commit, java.lang.Boolean RefreshInClient)
	{
		super(context);
		this.InputObject = InputObject;
		this.Member = Member;
		this.NewValue = NewValue;
		this.Commit = Commit == null ? null : dynamicchangeobject.proxies.ENU_Commit.valueOf(Commit);
		this.RefreshInClient = RefreshInClient;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		ILogNode logger = Core.getLogger("DynamicChangeObject");
		MendixObjectRepository mendixObjectRepository = new MendixObjectRepository(this.context());
		ValidateMemberValue validateMemberValue = new ValidateMemberValue();
		SetMemberValue setMemberValue = new SetMemberValue(logger, mendixObjectRepository, validateMemberValue, InputObject, Member, NewValue, Commit, RefreshInClient);
		return setMemberValue.setValue();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "DynamicChangeObject";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
